{
    "contents" : "## Simulation of simple and quadratic regression\n## when assumptions hold.\n\n# Enter parameter values\nbeta0<-200\nbeta1<-50\n# beta2<--2 leave beta2 out to make simple linear model\nsigma<-300\n\n# Create a vector of values for x, the predictor.\nx<-c(1,1,1,3,3,3,4,4,7,7,7,7,9,9,12,12,13,13,14,14,14,18,18,18)\nlength(x)\n\n# Simulate one realization of the observations.\ny<-beta0+beta1*x+rnorm(length(x),0, sigma)\ny\n# Note how the recycling function results in the correct\n# vector of observations.\n\nbeta0\nbeta1\nbeta1*x\nrnorm(length(x),0, sigma)\n\n# Perform the quadratic regression using the lm function\nslr<-lm(y~I(x-mean(x))) # The use of I() is to to enforce arithmetic within a formula\n# the I(x-mean(x)) centers the x or predictor\nslr\navgx<-mean(x)\nsummary(slr) # a summary of the regression results\n# we can see the effect of centering by comparing to uncentered version\nuc.slr <- lm(y~x) # I() is necessary to make sure quadratic term is included\nsummary(uc.slr)\nnames(slr)   # names of all components of object slr\nstr(slr)  #structure of the object slr\nslr$coefficients # looking at some of the components of object slr.\nslr$residuals\nslr$fitted.values\nslr$model\ncoef(slr)    # estimated regression coefficients.\nconfint(slr) # confidence interval for regression coefficients.\nvcov(slr) # Matrix of covariance of estimated regression coefficients.\nanova(slr) # Analysis of variance of regression.\n(yhat9<-slr$coef%*%c(1,9)) #Prediction for x=9. Note the use of parenthesis to create and object and display it.\nplot(slr)  # Default plots show diagnostics for assumptions.\npar(mfrow = c(2,2)) #  Asking to see the diagnostics in one view, it is: see 4 plots in one page\nplot(slr) # Deafult plots show in one page\ndev.off() # Restarting the plot viewer \nplot(y~x)  # Plot data.\nplot(y~x, xlab=\"Predictor\", ylab=\"Response variable\", ylim=c(0,1400)) # Better with labels for axes.\nlines(coef(slr)[1]+coef(slr)[2]*(c(0:40/2)-avgx)~c(0:40/2), lty=2, lwd=3) #Add a line for the fitted values.\nlines(beta0+beta1*c(0:40/2)~c(0:40/2), lty=1) # Add line for true model\n## The MSE can be calculated \"by hand\" using matrix algebra\nslr$residuals%*%slr$residuals\nmse<-slr$residuals%*%slr$residuals/(length(y)-length(slr$coef))\nsqrt(mse)\n\n## Creating a function can streamline the simulation process.\n## We pass the true model parameters as arguments of the function.\n\nmy.slr.sim<-function(b0, b1,s) {\n\tbeta0<-b0\n\tbeta1<-b1\n\tsigma<-s\n\tx<-c(1,1,1,3,3,3,4,4,7,7,7,7,9,9,12,12,13,13,14,14,14,18,18,18)\n\ty<-beta0+beta1*x+rnorm(length(x),0, sigma)\n\tslr<-lm(y~I(x-mean(x)))\n\tplot(y~x, xlab=\"Predictor\", ylab=\"Response variable\")\n\tlines(coef(slr)[1]+coef(slr)[2]*(c(0:40/2)-mean(x))~c(0:40/2), lty=2, lwd=3)\n\tlines(beta0+beta1*c(0:40/2)~c(0:40/2), lty=1)\n\t}\nmy.slr.sim(10,20,100) #run repeatedly to get random simulations\n## Load package car for additional functions.\n\n## Simulations to look at the distributions of the estimated coefficients.\nbcoef<-matrix(0,1000,2)  #make a matrix of zeroes to receive the estimated coefficients.\n## Perform simulation loop, then we use for().\nfor(i in 1:1000){\nnewy<-beta0+beta1*x+rnorm(24,0, sigma)\nnew.slr<-lm(newy~x)\nbcoef[i,]<-coef(new.slr)\n}\n## Plot smooth histograms of results for the calculated slope.\n## Keep in mind that the model was misspecified because we did not include a quadratic term.\nplot(density(bcoef[,2]),main=\"Frequency of estimated beta1\",xlab=\"estimated slope\")\nabline(v=mean(bcoef[,2]))\nabline(v=quantile(bcoef[,2],c(0.025,0.975)), lty=3)\nabline(v=beta1, lwd=3)\n******************\n  \n  \nlibrary(ellipse)\nconfint(slr)\nquantile(bcoef[,2],c(0.025,0.975))\nquantile(bcoef[,1],c(0.025,0.975))\nplot(ellipse(slr), type=\"l\")\nplot(bcoef[,2],bcoef[,1])\nfor(i in 1:100){\nnewy<-beta0+beta1*x+rnorm(24,0, sigma)\nnew.slr<-lm(newy~x)\nbcoef[i,]<-new.slr$coef\n}\nplot(ellipse(uc.slr), type=\"l\")\npoints(bcoef[,2],bcoef[,1])",
    "created" : 1349926877592.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1031960712",
    "id" : "ED3BB024",
    "lastKnownWriteTime" : 1349931033,
    "path" : "~/Documents/TeachServ/CLASSES/AGR206/PLS206F10/RstudioPLS206/RegSim-1.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}